/*!
 * devextreme-react
 * Version: 19.2.5
 * Build date: Mon Dec 16 2019
 *
 * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-react
 */

/// <reference types="react" />
import dxMenu, { IOptions } from "devextreme/ui/menu";
import { Component as BaseComponent, IHtmlOptions } from "./core/component";
import NestedOption from "./core/nested-option";
interface IMenuOptions extends IOptions, IHtmlOptions {
    itemRender?: (props: any) => React.ReactNode;
    itemComponent?: React.ComponentType<any>;
    itemKeyFn?: (data: any) => string;
    defaultItems?: any;
    defaultSelectedItem?: any;
}
declare class Menu extends BaseComponent<IMenuOptions> {
    get instance(): dxMenu;
    protected _WidgetClass: typeof dxMenu;
    protected _defaults: {
        defaultItems: string;
        defaultSelectedItem: string;
    };
    protected _expectedChildren: {
        animation: {
            optionName: string;
            isCollectionItem: boolean;
        };
        item: {
            optionName: string;
            isCollectionItem: boolean;
        };
        showFirstSubmenuMode: {
            optionName: string;
            isCollectionItem: boolean;
        };
        showSubmenuMode: {
            optionName: string;
            isCollectionItem: boolean;
        };
    };
    protected _templateProps: {
        tmplOption: string;
        render: string;
        component: string;
        keyFn: string;
    }[];
}
declare class Animation extends NestedOption<{
    hide?: any;
    show?: any;
}> {
    static OptionName: string;
    static ExpectedChildren: {
        hide: {
            optionName: string;
            isCollectionItem: boolean;
        };
        show: {
            optionName: string;
            isCollectionItem: boolean;
        };
    };
}
declare class Delay extends NestedOption<{
    hide?: any;
    show?: any;
}> {
    static OptionName: string;
}
declare class Hide extends NestedOption<{
    complete?: any;
    delay?: any;
    direction?: any;
    duration?: any;
    easing?: any;
    from?: any;
    staggerDelay?: any;
    start?: any;
    to?: any;
    type?: any;
}> {
    static OptionName: string;
}
declare class Item extends NestedOption<{
    beginGroup?: any;
    closeMenuOnClick?: any;
    disabled?: any;
    html?: any;
    icon?: any;
    items?: any;
    selectable?: any;
    selected?: any;
    template?: any;
    text?: any;
    visible?: any;
    render?: (props: any) => React.ReactNode;
    component?: React.ComponentType<any>;
    keyFn?: (data: any) => string;
}> {
    static OptionName: string;
    static IsCollectionItem: boolean;
    static TemplateProps: {
        tmplOption: string;
        render: string;
        component: string;
        keyFn: string;
    }[];
}
declare class Show extends NestedOption<{
    complete?: any;
    delay?: any;
    direction?: any;
    duration?: any;
    easing?: any;
    from?: any;
    staggerDelay?: any;
    start?: any;
    to?: any;
    type?: any;
}> {
    static OptionName: string;
}
declare class ShowFirstSubmenuMode extends NestedOption<{
    delay?: {
        hide?: any;
        show?: any;
    };
    name?: any;
}> {
    static OptionName: string;
    static ExpectedChildren: {
        delay: {
            optionName: string;
            isCollectionItem: boolean;
        };
    };
}
declare class ShowSubmenuMode extends NestedOption<{
    delay?: {
        hide?: any;
        show?: any;
    };
    name?: any;
}> {
    static OptionName: string;
    static ExpectedChildren: {
        delay: {
            optionName: string;
            isCollectionItem: boolean;
        };
    };
}
export default Menu;
export { Menu, IMenuOptions, Animation, Delay, Hide, Item, Show, ShowFirstSubmenuMode, ShowSubmenuMode };

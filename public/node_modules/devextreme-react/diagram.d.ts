/*!
 * devextreme-react
 * Version: 19.2.5
 * Build date: Mon Dec 16 2019
 *
 * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-react
 */

import dxDiagram, { IOptions } from "devextreme/ui/diagram";
import { Component as BaseComponent, IHtmlOptions } from "./core/component";
import NestedOption from "./core/nested-option";
interface IDiagramOptions extends IOptions, IHtmlOptions {
}
declare class Diagram extends BaseComponent<IDiagramOptions> {
    get instance(): dxDiagram;
    protected _WidgetClass: typeof dxDiagram;
    protected _expectedChildren: {
        contextMenu: {
            optionName: string;
            isCollectionItem: boolean;
        };
        customShape: {
            optionName: string;
            isCollectionItem: boolean;
        };
        edges: {
            optionName: string;
            isCollectionItem: boolean;
        };
        export: {
            optionName: string;
            isCollectionItem: boolean;
        };
        gridSize: {
            optionName: string;
            isCollectionItem: boolean;
        };
        nodes: {
            optionName: string;
            isCollectionItem: boolean;
        };
        pageSize: {
            optionName: string;
            isCollectionItem: boolean;
        };
        propertiesPanel: {
            optionName: string;
            isCollectionItem: boolean;
        };
        toolbar: {
            optionName: string;
            isCollectionItem: boolean;
        };
        toolbox: {
            optionName: string;
            isCollectionItem: boolean;
        };
        zoomLevel: {
            optionName: string;
            isCollectionItem: boolean;
        };
    };
}
declare class AutoLayout extends NestedOption<{
    orientation?: any;
    type?: any;
}> {
    static OptionName: string;
}
declare class ConnectionPoint extends NestedOption<{
    x?: any;
    y?: any;
}> {
    static OptionName: string;
    static IsCollectionItem: boolean;
}
declare class ContextMenu extends NestedOption<{
    commands?: any;
    enabled?: any;
}> {
    static OptionName: string;
}
declare class CustomShape extends NestedOption<{
    allowEditImage?: any;
    allowEditText?: any;
    backgroundImageHeight?: any;
    backgroundImageLeft?: any;
    backgroundImageTop?: any;
    backgroundImageUrl?: any;
    backgroundImageWidth?: any;
    baseType?: any;
    category?: any;
    connectionPoints?: {
        x?: any;
        y?: any;
    };
    defaultHeight?: any;
    defaultImageUrl?: any;
    defaultText?: any;
    defaultWidth?: any;
    imageHeight?: any;
    imageLeft?: any;
    imageTop?: any;
    imageWidth?: any;
    textHeight?: any;
    textLeft?: any;
    textTop?: any;
    textWidth?: any;
    title?: any;
    type?: any;
}> {
    static OptionName: string;
    static IsCollectionItem: boolean;
    static ExpectedChildren: {
        connectionPoint: {
            optionName: string;
            isCollectionItem: boolean;
        };
    };
}
declare class Edges extends NestedOption<{
    dataSource?: any;
    fromExpr?: any;
    fromLineEndExpr?: any;
    fromPointIndexExpr?: any;
    keyExpr?: any;
    lineTypeExpr?: any;
    lockedExpr?: any;
    pointsExpr?: any;
    styleExpr?: any;
    textExpr?: any;
    textStyleExpr?: any;
    toExpr?: any;
    toLineEndExpr?: any;
    toPointIndexExpr?: any;
    zIndexExpr?: any;
}> {
    static OptionName: string;
}
declare class Export extends NestedOption<{
    fileName?: any;
    proxyUrl?: any;
}> {
    static OptionName: string;
}
declare class GridSize extends NestedOption<{
    items?: any;
    value?: any;
}> {
    static OptionName: string;
}
declare class Group extends NestedOption<{
    commands?: any;
    category?: any;
    displayMode?: any;
    expanded?: any;
    shapes?: any;
    title?: any;
}> {
    static OptionName: string;
    static IsCollectionItem: boolean;
}
declare class Item extends NestedOption<{
    height?: any;
    text?: any;
    width?: any;
}> {
    static OptionName: string;
    static IsCollectionItem: boolean;
}
declare class Nodes extends NestedOption<{
    autoLayout?: {
        orientation?: any;
        type?: any;
    };
    childrenExpr?: any;
    containerKeyExpr?: any;
    dataSource?: any;
    heightExpr?: any;
    imageUrlExpr?: any;
    itemsExpr?: any;
    keyExpr?: any;
    leftExpr?: any;
    lockedExpr?: any;
    parentKeyExpr?: any;
    styleExpr?: any;
    textExpr?: any;
    textStyleExpr?: any;
    topExpr?: any;
    typeExpr?: any;
    widthExpr?: any;
    zIndexExpr?: any;
}> {
    static OptionName: string;
    static ExpectedChildren: {
        autoLayout: {
            optionName: string;
            isCollectionItem: boolean;
        };
    };
}
declare class PageSize extends NestedOption<{
    height?: any;
    items?: {
        height?: any;
        text?: any;
        width?: any;
    };
    width?: any;
}> {
    static OptionName: string;
    static ExpectedChildren: {
        item: {
            optionName: string;
            isCollectionItem: boolean;
        };
    };
}
declare class PropertiesPanel extends NestedOption<{
    collapsible?: any;
    enabled?: any;
    groups?: {
        commands?: any;
    };
}> {
    static OptionName: string;
    static ExpectedChildren: {
        group: {
            optionName: string;
            isCollectionItem: boolean;
        };
        propertiesPanelGroup: {
            optionName: string;
            isCollectionItem: boolean;
        };
    };
}
declare class PropertiesPanelGroup extends NestedOption<{
    commands?: any;
}> {
    static OptionName: string;
    static IsCollectionItem: boolean;
}
declare class Toolbar extends NestedOption<{
    commands?: any;
    visible?: any;
}> {
    static OptionName: string;
}
declare class Toolbox extends NestedOption<{
    groups?: {
        category?: any;
        displayMode?: any;
        expanded?: any;
        shapes?: any;
        title?: any;
    };
    visible?: any;
}> {
    static OptionName: string;
    static ExpectedChildren: {
        group: {
            optionName: string;
            isCollectionItem: boolean;
        };
        toolboxGroup: {
            optionName: string;
            isCollectionItem: boolean;
        };
    };
}
declare class ToolboxGroup extends NestedOption<{
    category?: any;
    displayMode?: any;
    expanded?: any;
    shapes?: any;
    title?: any;
}> {
    static OptionName: string;
    static IsCollectionItem: boolean;
}
declare class ZoomLevel extends NestedOption<{
    items?: any;
    value?: any;
}> {
    static OptionName: string;
}
export default Diagram;
export { Diagram, IDiagramOptions, AutoLayout, ConnectionPoint, ContextMenu, CustomShape, Edges, Export, GridSize, Group, Item, Nodes, PageSize, PropertiesPanel, PropertiesPanelGroup, Toolbar, Toolbox, ToolboxGroup, ZoomLevel };

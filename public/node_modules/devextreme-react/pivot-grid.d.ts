/*!
 * devextreme-react
 * Version: 19.2.5
 * Build date: Mon Dec 16 2019
 *
 * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-react
 */

import dxPivotGrid, { IOptions } from "devextreme/ui/pivot_grid";
import { Component as BaseComponent, IHtmlOptions } from "./core/component";
import NestedOption from "./core/nested-option";
interface IPivotGridOptions extends IOptions, IHtmlOptions {
}
declare class PivotGrid extends BaseComponent<IPivotGridOptions> {
    get instance(): dxPivotGrid;
    protected _WidgetClass: typeof dxPivotGrid;
    protected _expectedChildren: {
        export: {
            optionName: string;
            isCollectionItem: boolean;
        };
        fieldChooser: {
            optionName: string;
            isCollectionItem: boolean;
        };
        fieldPanel: {
            optionName: string;
            isCollectionItem: boolean;
        };
        headerFilter: {
            optionName: string;
            isCollectionItem: boolean;
        };
        loadPanel: {
            optionName: string;
            isCollectionItem: boolean;
        };
        pivotGridTexts: {
            optionName: string;
            isCollectionItem: boolean;
        };
        scrolling: {
            optionName: string;
            isCollectionItem: boolean;
        };
        stateStoring: {
            optionName: string;
            isCollectionItem: boolean;
        };
        texts: {
            optionName: string;
            isCollectionItem: boolean;
        };
    };
}
declare class Export extends NestedOption<{
    enabled?: any;
    fileName?: any;
    ignoreExcelErrors?: any;
    proxyUrl?: any;
}> {
    static OptionName: string;
}
declare class FieldChooser extends NestedOption<{
    allowSearch?: any;
    applyChangesMode?: any;
    enabled?: any;
    height?: any;
    layout?: any;
    searchTimeout?: any;
    texts?: {
        allFields?: any;
        columnFields?: any;
        dataFields?: any;
        filterFields?: any;
        rowFields?: any;
    };
    title?: any;
    width?: any;
}> {
    static OptionName: string;
    static ExpectedChildren: {
        fieldChooserTexts: {
            optionName: string;
            isCollectionItem: boolean;
        };
        texts: {
            optionName: string;
            isCollectionItem: boolean;
        };
    };
}
declare class FieldChooserTexts extends NestedOption<{
    allFields?: any;
    columnFields?: any;
    dataFields?: any;
    filterFields?: any;
    rowFields?: any;
}> {
    static OptionName: string;
}
declare class FieldPanel extends NestedOption<{
    allowFieldDragging?: any;
    showColumnFields?: any;
    showDataFields?: any;
    showFilterFields?: any;
    showRowFields?: any;
    texts?: {
        columnFieldArea?: any;
        dataFieldArea?: any;
        filterFieldArea?: any;
        rowFieldArea?: any;
    };
    visible?: any;
}> {
    static OptionName: string;
    static ExpectedChildren: {
        fieldPanelTexts: {
            optionName: string;
            isCollectionItem: boolean;
        };
        texts: {
            optionName: string;
            isCollectionItem: boolean;
        };
    };
}
declare class FieldPanelTexts extends NestedOption<{
    columnFieldArea?: any;
    dataFieldArea?: any;
    filterFieldArea?: any;
    rowFieldArea?: any;
}> {
    static OptionName: string;
}
declare class HeaderFilter extends NestedOption<{
    allowSearch?: any;
    height?: any;
    searchTimeout?: any;
    showRelevantValues?: any;
    texts?: {
        cancel?: any;
        emptyValue?: any;
        ok?: any;
    };
    width?: any;
}> {
    static OptionName: string;
    static ExpectedChildren: {
        headerFilterTexts: {
            optionName: string;
            isCollectionItem: boolean;
        };
        texts: {
            optionName: string;
            isCollectionItem: boolean;
        };
    };
}
declare class HeaderFilterTexts extends NestedOption<{
    cancel?: any;
    emptyValue?: any;
    ok?: any;
}> {
    static OptionName: string;
}
declare class LoadPanel extends NestedOption<{
    enabled?: any;
    height?: any;
    indicatorSrc?: any;
    showIndicator?: any;
    showPane?: any;
    text?: any;
    width?: any;
}> {
    static OptionName: string;
}
declare class PivotGridTexts extends NestedOption<{
    collapseAll?: any;
    dataNotAvailable?: any;
    expandAll?: any;
    exportToExcel?: any;
    grandTotal?: any;
    noData?: any;
    removeAllSorting?: any;
    showFieldChooser?: any;
    sortColumnBySummary?: any;
    sortRowBySummary?: any;
    total?: any;
}> {
    static OptionName: string;
}
declare class Scrolling extends NestedOption<{
    mode?: any;
    useNative?: any;
}> {
    static OptionName: string;
}
declare class StateStoring extends NestedOption<{
    customLoad?: any;
    customSave?: any;
    enabled?: any;
    savingTimeout?: any;
    storageKey?: any;
    type?: any;
}> {
    static OptionName: string;
}
declare class Texts extends NestedOption<{
    allFields?: any;
    columnFields?: any;
    dataFields?: any;
    filterFields?: any;
    rowFields?: any;
    columnFieldArea?: any;
    dataFieldArea?: any;
    filterFieldArea?: any;
    rowFieldArea?: any;
    cancel?: any;
    emptyValue?: any;
    ok?: any;
    collapseAll?: any;
    dataNotAvailable?: any;
    expandAll?: any;
    exportToExcel?: any;
    grandTotal?: any;
    noData?: any;
    removeAllSorting?: any;
    showFieldChooser?: any;
    sortColumnBySummary?: any;
    sortRowBySummary?: any;
    total?: any;
}> {
    static OptionName: string;
}
export default PivotGrid;
export { PivotGrid, IPivotGridOptions, Export, FieldChooser, FieldChooserTexts, FieldPanel, FieldPanelTexts, HeaderFilter, HeaderFilterTexts, LoadPanel, PivotGridTexts, Scrolling, StateStoring, Texts };

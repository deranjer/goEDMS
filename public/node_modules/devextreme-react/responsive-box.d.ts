/*!
 * devextreme-react
 * Version: 19.2.5
 * Build date: Mon Dec 16 2019
 *
 * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-react
 */

/// <reference types="react" />
import dxResponsiveBox, { IOptions } from "devextreme/ui/responsive_box";
import { Component as BaseComponent, IHtmlOptions } from "./core/component";
import NestedOption from "./core/nested-option";
interface IResponsiveBoxOptions extends IOptions, IHtmlOptions {
    itemRender?: (props: any) => React.ReactNode;
    itemComponent?: React.ComponentType<any>;
    itemKeyFn?: (data: any) => string;
    defaultItems?: any;
}
declare class ResponsiveBox extends BaseComponent<IResponsiveBoxOptions> {
    get instance(): dxResponsiveBox;
    protected _WidgetClass: typeof dxResponsiveBox;
    protected _defaults: {
        defaultItems: string;
    };
    protected _expectedChildren: {
        col: {
            optionName: string;
            isCollectionItem: boolean;
        };
        item: {
            optionName: string;
            isCollectionItem: boolean;
        };
        row: {
            optionName: string;
            isCollectionItem: boolean;
        };
    };
    protected _templateProps: {
        tmplOption: string;
        render: string;
        component: string;
        keyFn: string;
    }[];
}
declare class Col extends NestedOption<{
    baseSize?: any;
    ratio?: any;
    screen?: any;
    shrink?: any;
}> {
    static OptionName: string;
    static IsCollectionItem: boolean;
}
declare class Item extends NestedOption<{
    disabled?: any;
    html?: any;
    location?: {
        col?: any;
        colspan?: any;
        row?: any;
        rowspan?: any;
        screen?: any;
    };
    template?: any;
    text?: any;
    visible?: any;
    render?: (props: any) => React.ReactNode;
    component?: React.ComponentType<any>;
    keyFn?: (data: any) => string;
}> {
    static OptionName: string;
    static IsCollectionItem: boolean;
    static ExpectedChildren: {
        location: {
            optionName: string;
            isCollectionItem: boolean;
        };
    };
    static TemplateProps: {
        tmplOption: string;
        render: string;
        component: string;
        keyFn: string;
    }[];
}
declare class Location extends NestedOption<{
    col?: any;
    colspan?: any;
    row?: any;
    rowspan?: any;
    screen?: any;
}> {
    static OptionName: string;
    static IsCollectionItem: boolean;
}
declare class Row extends NestedOption<{
    baseSize?: any;
    ratio?: any;
    screen?: any;
    shrink?: any;
}> {
    static OptionName: string;
    static IsCollectionItem: boolean;
}
export default ResponsiveBox;
export { ResponsiveBox, IResponsiveBoxOptions, Col, Item, Location, Row };

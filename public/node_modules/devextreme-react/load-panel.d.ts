/*!
 * devextreme-react
 * Version: 19.2.5
 * Build date: Mon Dec 16 2019
 *
 * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-react
 */

import dxLoadPanel, { IOptions } from "devextreme/ui/load_panel";
import { Component as BaseComponent, IHtmlOptions } from "./core/component";
import NestedOption from "./core/nested-option";
interface ILoadPanelOptions extends IOptions, IHtmlOptions {
    defaultPosition?: any;
    defaultVisible?: any;
}
declare class LoadPanel extends BaseComponent<ILoadPanelOptions> {
    get instance(): dxLoadPanel;
    protected _WidgetClass: typeof dxLoadPanel;
    protected _defaults: {
        defaultPosition: string;
        defaultVisible: string;
    };
    protected _expectedChildren: {
        animation: {
            optionName: string;
            isCollectionItem: boolean;
        };
        position: {
            optionName: string;
            isCollectionItem: boolean;
        };
    };
}
declare class Animation extends NestedOption<{
    hide?: any;
    show?: any;
}> {
    static OptionName: string;
    static ExpectedChildren: {
        hide: {
            optionName: string;
            isCollectionItem: boolean;
        };
        show: {
            optionName: string;
            isCollectionItem: boolean;
        };
    };
}
declare class At extends NestedOption<{
    x?: any;
    y?: any;
}> {
    static OptionName: string;
}
declare class BoundaryOffset extends NestedOption<{
    x?: any;
    y?: any;
}> {
    static OptionName: string;
}
declare class Collision extends NestedOption<{
    x?: any;
    y?: any;
}> {
    static OptionName: string;
}
declare class Hide extends NestedOption<{
    complete?: any;
    delay?: any;
    direction?: any;
    duration?: any;
    easing?: any;
    from?: any;
    staggerDelay?: any;
    start?: any;
    to?: any;
    type?: any;
}> {
    static OptionName: string;
}
declare class My extends NestedOption<{
    x?: any;
    y?: any;
}> {
    static OptionName: string;
}
declare class Offset extends NestedOption<{
    x?: any;
    y?: any;
}> {
    static OptionName: string;
}
declare class Position extends NestedOption<{
    at?: {
        x?: any;
        y?: any;
    };
    boundary?: any;
    boundaryOffset?: {
        x?: any;
        y?: any;
    };
    collision?: {
        x?: any;
        y?: any;
    };
    my?: {
        x?: any;
        y?: any;
    };
    of?: any;
    offset?: {
        x?: any;
        y?: any;
    };
}> {
    static OptionName: string;
    static ExpectedChildren: {
        at: {
            optionName: string;
            isCollectionItem: boolean;
        };
        boundaryOffset: {
            optionName: string;
            isCollectionItem: boolean;
        };
        collision: {
            optionName: string;
            isCollectionItem: boolean;
        };
        my: {
            optionName: string;
            isCollectionItem: boolean;
        };
        offset: {
            optionName: string;
            isCollectionItem: boolean;
        };
    };
}
declare class Show extends NestedOption<{
    complete?: any;
    delay?: any;
    direction?: any;
    duration?: any;
    easing?: any;
    from?: any;
    staggerDelay?: any;
    start?: any;
    to?: any;
    type?: any;
}> {
    static OptionName: string;
}
export default LoadPanel;
export { LoadPanel, ILoadPanelOptions, Animation, At, BoundaryOffset, Collision, Hide, My, Offset, Position, Show };

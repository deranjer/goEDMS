/*!
 * devextreme-react
 * Version: 19.2.5
 * Build date: Mon Dec 16 2019
 *
 * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-react
 */

import dxRangeSelector, { IOptions } from "devextreme/viz/range_selector";
import { Component as BaseComponent, IHtmlOptions } from "./core/component";
import NestedOption from "./core/nested-option";
interface IRangeSelectorOptions extends IOptions, IHtmlOptions {
    defaultLoadingIndicator?: any;
    defaultValue?: any;
}
declare class RangeSelector extends BaseComponent<IRangeSelectorOptions> {
    get instance(): dxRangeSelector;
    protected _WidgetClass: typeof dxRangeSelector;
    protected _defaults: {
        defaultLoadingIndicator: string;
        defaultValue: string;
    };
    protected _expectedChildren: {
        background: {
            optionName: string;
            isCollectionItem: boolean;
        };
        behavior: {
            optionName: string;
            isCollectionItem: boolean;
        };
        chart: {
            optionName: string;
            isCollectionItem: boolean;
        };
        export: {
            optionName: string;
            isCollectionItem: boolean;
        };
        indent: {
            optionName: string;
            isCollectionItem: boolean;
        };
        loadingIndicator: {
            optionName: string;
            isCollectionItem: boolean;
        };
        margin: {
            optionName: string;
            isCollectionItem: boolean;
        };
        scale: {
            optionName: string;
            isCollectionItem: boolean;
        };
        shutter: {
            optionName: string;
            isCollectionItem: boolean;
        };
        size: {
            optionName: string;
            isCollectionItem: boolean;
        };
        sliderHandle: {
            optionName: string;
            isCollectionItem: boolean;
        };
        sliderMarker: {
            optionName: string;
            isCollectionItem: boolean;
        };
        title: {
            optionName: string;
            isCollectionItem: boolean;
        };
        value: {
            optionName: string;
            isCollectionItem: boolean;
        };
    };
}
declare class Aggregation extends NestedOption<{
    calculate?: any;
    enabled?: any;
    method?: any;
}> {
    static OptionName: string;
}
declare class AggregationInterval extends NestedOption<{
    days?: any;
    hours?: any;
    milliseconds?: any;
    minutes?: any;
    months?: any;
    quarters?: any;
    seconds?: any;
    weeks?: any;
    years?: any;
}> {
    static OptionName: string;
}
declare class ArgumentFormat extends NestedOption<{
    currency?: any;
    formatter?: any;
    parser?: any;
    precision?: any;
    type?: any;
}> {
    static OptionName: string;
}
declare class Background extends NestedOption<{
    color?: any;
    image?: {
        location?: any;
        url?: any;
    };
    visible?: any;
}> {
    static OptionName: string;
    static ExpectedChildren: {
        backgroundImage: {
            optionName: string;
            isCollectionItem: boolean;
        };
        image: {
            optionName: string;
            isCollectionItem: boolean;
        };
    };
}
declare class BackgroundImage extends NestedOption<{
    location?: any;
    url?: any;
}> {
    static OptionName: string;
}
declare class Behavior extends NestedOption<{
    allowSlidersSwap?: any;
    animationEnabled?: any;
    callValueChanged?: any;
    manualRangeSelectionEnabled?: any;
    moveSelectedRangeByClick?: any;
    snapToTicks?: any;
}> {
    static OptionName: string;
}
declare class Border extends NestedOption<{
    color?: any;
    dashStyle?: any;
    visible?: any;
    width?: any;
}> {
    static OptionName: string;
}
declare class Break extends NestedOption<{
    endValue?: any;
    startValue?: any;
}> {
    static OptionName: string;
    static IsCollectionItem: boolean;
}
declare class BreakStyle extends NestedOption<{
    color?: any;
    line?: any;
    width?: any;
}> {
    static OptionName: string;
}
declare class Chart extends NestedOption<{
    barGroupPadding?: any;
    barGroupWidth?: any;
    barWidth?: any;
    bottomIndent?: any;
    commonSeriesSettings?: any;
    dataPrepareSettings?: {
        checkTypeForAllData?: any;
        convertToAxisDataType?: any;
        sortingMethod?: any;
    };
    equalBarWidth?: any;
    maxBubbleSize?: any;
    minBubbleSize?: any;
    negativesAsZeroes?: any;
    palette?: any;
    paletteExtensionMode?: any;
    series?: any;
    seriesTemplate?: {
        customizeSeries?: any;
        nameField?: any;
    };
    topIndent?: any;
    useAggregation?: any;
    valueAxis?: {
        inverted?: any;
        logarithmBase?: any;
        max?: any;
        min?: any;
        type?: any;
        valueType?: any;
    };
}> {
    static OptionName: string;
    static ExpectedChildren: {
        commonSeriesSettings: {
            optionName: string;
            isCollectionItem: boolean;
        };
        dataPrepareSettings: {
            optionName: string;
            isCollectionItem: boolean;
        };
        series: {
            optionName: string;
            isCollectionItem: boolean;
        };
        seriesTemplate: {
            optionName: string;
            isCollectionItem: boolean;
        };
        valueAxis: {
            optionName: string;
            isCollectionItem: boolean;
        };
    };
}
declare class CommonSeriesSettings extends NestedOption<{
    aggregation?: {
        calculate?: any;
        enabled?: any;
        method?: any;
    };
    area?: any;
    argumentField?: any;
    axis?: any;
    bar?: any;
    barOverlapGroup?: any;
    barPadding?: any;
    barWidth?: any;
    border?: {
        color?: any;
        dashStyle?: any;
        visible?: any;
        width?: any;
    };
    bubble?: any;
    candlestick?: any;
    closeValueField?: any;
    color?: any;
    cornerRadius?: any;
    dashStyle?: any;
    fullstackedarea?: any;
    fullstackedbar?: any;
    fullstackedline?: any;
    fullstackedspline?: any;
    fullstackedsplinearea?: any;
    highValueField?: any;
    hoverMode?: any;
    hoverStyle?: {
        border?: {
            color?: any;
            dashStyle?: any;
            visible?: any;
            width?: any;
        };
        color?: any;
        dashStyle?: any;
        hatching?: {
            direction?: any;
            opacity?: any;
            step?: any;
            width?: any;
        };
        width?: any;
    };
    ignoreEmptyPoints?: any;
    innerColor?: any;
    label?: {
        alignment?: any;
        argumentFormat?: any;
        backgroundColor?: any;
        border?: {
            color?: any;
            dashStyle?: any;
            visible?: any;
            width?: any;
        };
        connector?: {
            color?: any;
            visible?: any;
            width?: any;
        };
        customizeText?: any;
        font?: any;
        format?: any;
        horizontalOffset?: any;
        position?: any;
        rotationAngle?: any;
        showForZeroValues?: any;
        verticalOffset?: any;
        visible?: any;
    };
    line?: any;
    lowValueField?: any;
    maxLabelCount?: any;
    minBarSize?: any;
    opacity?: any;
    openValueField?: any;
    pane?: any;
    point?: {
        border?: {
            color?: any;
            visible?: any;
            width?: any;
        };
        color?: any;
        hoverMode?: any;
        hoverStyle?: {
            border?: {
                color?: any;
                visible?: any;
                width?: any;
            };
            color?: any;
            size?: any;
        };
        image?: {
            height?: {
                rangeMaxPoint?: any;
                rangeMinPoint?: any;
            };
            url?: {
                rangeMaxPoint?: any;
                rangeMinPoint?: any;
            };
            width?: {
                rangeMaxPoint?: any;
                rangeMinPoint?: any;
            };
        };
        selectionMode?: any;
        selectionStyle?: {
            border?: {
                color?: any;
                visible?: any;
                width?: any;
            };
            color?: any;
            size?: any;
        };
        size?: any;
        symbol?: any;
        visible?: any;
    };
    rangearea?: any;
    rangebar?: any;
    rangeValue1Field?: any;
    rangeValue2Field?: any;
    reduction?: {
        color?: any;
        level?: any;
    };
    scatter?: any;
    selectionMode?: any;
    selectionStyle?: {
        border?: {
            color?: any;
            dashStyle?: any;
            visible?: any;
            width?: any;
        };
        color?: any;
        dashStyle?: any;
        hatching?: {
            direction?: any;
            opacity?: any;
            step?: any;
            width?: any;
        };
        width?: any;
    };
    showInLegend?: any;
    sizeField?: any;
    spline?: any;
    splinearea?: any;
    stack?: any;
    stackedarea?: any;
    stackedbar?: any;
    stackedline?: any;
    stackedspline?: any;
    stackedsplinearea?: any;
    steparea?: any;
    stepline?: any;
    stock?: any;
    tagField?: any;
    type?: any;
    valueErrorBar?: {
        color?: any;
        displayMode?: any;
        edgeLength?: any;
        highValueField?: any;
        lineWidth?: any;
        lowValueField?: any;
        opacity?: any;
        type?: any;
        value?: any;
    };
    valueField?: any;
    visible?: any;
    width?: any;
}> {
    static OptionName: string;
    static ExpectedChildren: {
        aggregation: {
            optionName: string;
            isCollectionItem: boolean;
        };
        border: {
            optionName: string;
            isCollectionItem: boolean;
        };
        commonSeriesSettingsHoverStyle: {
            optionName: string;
            isCollectionItem: boolean;
        };
        commonSeriesSettingsLabel: {
            optionName: string;
            isCollectionItem: boolean;
        };
        commonSeriesSettingsSelectionStyle: {
            optionName: string;
            isCollectionItem: boolean;
        };
        hoverStyle: {
            optionName: string;
            isCollectionItem: boolean;
        };
        label: {
            optionName: string;
            isCollectionItem: boolean;
        };
        point: {
            optionName: string;
            isCollectionItem: boolean;
        };
        reduction: {
            optionName: string;
            isCollectionItem: boolean;
        };
        selectionStyle: {
            optionName: string;
            isCollectionItem: boolean;
        };
        seriesBorder: {
            optionName: string;
            isCollectionItem: boolean;
        };
        valueErrorBar: {
            optionName: string;
            isCollectionItem: boolean;
        };
    };
}
declare class CommonSeriesSettingsHoverStyle extends NestedOption<{
    border?: {
        color?: any;
        dashStyle?: any;
        visible?: any;
        width?: any;
    };
    color?: any;
    dashStyle?: any;
    hatching?: {
        direction?: any;
        opacity?: any;
        step?: any;
        width?: any;
    };
    width?: any;
}> {
    static OptionName: string;
    static ExpectedChildren: {
        border: {
            optionName: string;
            isCollectionItem: boolean;
        };
        hatching: {
            optionName: string;
            isCollectionItem: boolean;
        };
        seriesBorder: {
            optionName: string;
            isCollectionItem: boolean;
        };
    };
}
declare class CommonSeriesSettingsLabel extends NestedOption<{
    alignment?: any;
    argumentFormat?: any;
    backgroundColor?: any;
    border?: {
        color?: any;
        dashStyle?: any;
        visible?: any;
        width?: any;
    };
    connector?: {
        color?: any;
        visible?: any;
        width?: any;
    };
    customizeText?: any;
    font?: any;
    format?: any;
    horizontalOffset?: any;
    position?: any;
    rotationAngle?: any;
    showForZeroValues?: any;
    verticalOffset?: any;
    visible?: any;
}> {
    static OptionName: string;
    static ExpectedChildren: {
        argumentFormat: {
            optionName: string;
            isCollectionItem: boolean;
        };
        border: {
            optionName: string;
            isCollectionItem: boolean;
        };
        connector: {
            optionName: string;
            isCollectionItem: boolean;
        };
        font: {
            optionName: string;
            isCollectionItem: boolean;
        };
        format: {
            optionName: string;
            isCollectionItem: boolean;
        };
        seriesBorder: {
            optionName: string;
            isCollectionItem: boolean;
        };
    };
}
declare class CommonSeriesSettingsSelectionStyle extends NestedOption<{
    border?: {
        color?: any;
        dashStyle?: any;
        visible?: any;
        width?: any;
    };
    color?: any;
    dashStyle?: any;
    hatching?: {
        direction?: any;
        opacity?: any;
        step?: any;
        width?: any;
    };
    width?: any;
}> {
    static OptionName: string;
    static ExpectedChildren: {
        border: {
            optionName: string;
            isCollectionItem: boolean;
        };
        hatching: {
            optionName: string;
            isCollectionItem: boolean;
        };
        seriesBorder: {
            optionName: string;
            isCollectionItem: boolean;
        };
    };
}
declare class Connector extends NestedOption<{
    color?: any;
    visible?: any;
    width?: any;
}> {
    static OptionName: string;
}
declare class DataPrepareSettings extends NestedOption<{
    checkTypeForAllData?: any;
    convertToAxisDataType?: any;
    sortingMethod?: any;
}> {
    static OptionName: string;
}
declare class Export extends NestedOption<{
    backgroundColor?: any;
    enabled?: any;
    fileName?: any;
    formats?: any;
    margin?: any;
    printingEnabled?: any;
    proxyUrl?: any;
    svgToCanvas?: any;
}> {
    static OptionName: string;
}
declare class Font extends NestedOption<{
    color?: any;
    family?: any;
    opacity?: any;
    size?: any;
    weight?: any;
}> {
    static OptionName: string;
}
declare class Format extends NestedOption<{
    currency?: any;
    formatter?: any;
    parser?: any;
    precision?: any;
    type?: any;
}> {
    static OptionName: string;
}
declare class Hatching extends NestedOption<{
    direction?: any;
    opacity?: any;
    step?: any;
    width?: any;
}> {
    static OptionName: string;
}
declare class Height extends NestedOption<{
    rangeMaxPoint?: any;
    rangeMinPoint?: any;
}> {
    static OptionName: string;
}
declare class HoverStyle extends NestedOption<{
    border?: {
        color?: any;
        dashStyle?: any;
        visible?: any;
        width?: any;
    };
    color?: any;
    dashStyle?: any;
    hatching?: {
        direction?: any;
        opacity?: any;
        step?: any;
        width?: any;
    };
    width?: any;
    size?: any;
}> {
    static OptionName: string;
}
declare class Image extends NestedOption<{
    location?: any;
    url?: any;
    height?: {
        rangeMaxPoint?: any;
        rangeMinPoint?: any;
    };
    width?: {
        rangeMaxPoint?: any;
        rangeMinPoint?: any;
    };
}> {
    static OptionName: string;
}
declare class Indent extends NestedOption<{
    left?: any;
    right?: any;
}> {
    static OptionName: string;
}
declare class Label extends NestedOption<{
    alignment?: any;
    argumentFormat?: any;
    backgroundColor?: any;
    border?: {
        color?: any;
        dashStyle?: any;
        visible?: any;
        width?: any;
    };
    connector?: {
        color?: any;
        visible?: any;
        width?: any;
    };
    customizeText?: any;
    font?: any;
    format?: any;
    horizontalOffset?: any;
    position?: any;
    rotationAngle?: any;
    showForZeroValues?: any;
    verticalOffset?: any;
    visible?: any;
    overlappingBehavior?: any;
    topIndent?: any;
}> {
    static OptionName: string;
}
declare class Length extends NestedOption<{
    days?: any;
    hours?: any;
    milliseconds?: any;
    minutes?: any;
    months?: any;
    quarters?: any;
    seconds?: any;
    weeks?: any;
    years?: any;
}> {
    static OptionName: string;
}
declare class LoadingIndicator extends NestedOption<{
    backgroundColor?: any;
    enabled?: any;
    font?: any;
    show?: any;
    text?: any;
    defaultShow?: any;
}> {
    static OptionName: string;
    static DefaultsProps: {
        defaultShow: string;
    };
    static ExpectedChildren: {
        font: {
            optionName: string;
            isCollectionItem: boolean;
        };
    };
}
declare class Margin extends NestedOption<{
    bottom?: any;
    left?: any;
    right?: any;
    top?: any;
}> {
    static OptionName: string;
}
declare class Marker extends NestedOption<{
    label?: {
        customizeText?: any;
        format?: any;
    };
    separatorHeight?: any;
    textLeftIndent?: any;
    textTopIndent?: any;
    topIndent?: any;
    visible?: any;
}> {
    static OptionName: string;
    static ExpectedChildren: {
        label: {
            optionName: string;
            isCollectionItem: boolean;
        };
        markerLabel: {
            optionName: string;
            isCollectionItem: boolean;
        };
    };
}
declare class MarkerLabel extends NestedOption<{
    customizeText?: any;
    format?: any;
}> {
    static OptionName: string;
    static ExpectedChildren: {
        format: {
            optionName: string;
            isCollectionItem: boolean;
        };
    };
}
declare class MaxRange extends NestedOption<{
    days?: any;
    hours?: any;
    milliseconds?: any;
    minutes?: any;
    months?: any;
    quarters?: any;
    seconds?: any;
    weeks?: any;
    years?: any;
}> {
    static OptionName: string;
}
declare class MinorTick extends NestedOption<{
    color?: any;
    opacity?: any;
    visible?: any;
    width?: any;
}> {
    static OptionName: string;
}
declare class MinorTickInterval extends NestedOption<{
    days?: any;
    hours?: any;
    milliseconds?: any;
    minutes?: any;
    months?: any;
    quarters?: any;
    seconds?: any;
    weeks?: any;
    years?: any;
}> {
    static OptionName: string;
}
declare class MinRange extends NestedOption<{
    days?: any;
    hours?: any;
    milliseconds?: any;
    minutes?: any;
    months?: any;
    quarters?: any;
    seconds?: any;
    weeks?: any;
    years?: any;
}> {
    static OptionName: string;
}
declare class Point extends NestedOption<{
    border?: {
        color?: any;
        visible?: any;
        width?: any;
    };
    color?: any;
    hoverMode?: any;
    hoverStyle?: {
        border?: {
            color?: any;
            visible?: any;
            width?: any;
        };
        color?: any;
        size?: any;
    };
    image?: {
        height?: {
            rangeMaxPoint?: any;
            rangeMinPoint?: any;
        };
        url?: {
            rangeMaxPoint?: any;
            rangeMinPoint?: any;
        };
        width?: {
            rangeMaxPoint?: any;
            rangeMinPoint?: any;
        };
    };
    selectionMode?: any;
    selectionStyle?: {
        border?: {
            color?: any;
            visible?: any;
            width?: any;
        };
        color?: any;
        size?: any;
    };
    size?: any;
    symbol?: any;
    visible?: any;
}> {
    static OptionName: string;
    static ExpectedChildren: {
        border: {
            optionName: string;
            isCollectionItem: boolean;
        };
        hoverStyle: {
            optionName: string;
            isCollectionItem: boolean;
        };
        image: {
            optionName: string;
            isCollectionItem: boolean;
        };
        pointBorder: {
            optionName: string;
            isCollectionItem: boolean;
        };
        pointHoverStyle: {
            optionName: string;
            isCollectionItem: boolean;
        };
        pointImage: {
            optionName: string;
            isCollectionItem: boolean;
        };
        pointSelectionStyle: {
            optionName: string;
            isCollectionItem: boolean;
        };
        selectionStyle: {
            optionName: string;
            isCollectionItem: boolean;
        };
    };
}
declare class PointBorder extends NestedOption<{
    color?: any;
    visible?: any;
    width?: any;
}> {
    static OptionName: string;
}
declare class PointHoverStyle extends NestedOption<{
    border?: {
        color?: any;
        visible?: any;
        width?: any;
    };
    color?: any;
    size?: any;
}> {
    static OptionName: string;
    static ExpectedChildren: {
        border: {
            optionName: string;
            isCollectionItem: boolean;
        };
        pointBorder: {
            optionName: string;
            isCollectionItem: boolean;
        };
    };
}
declare class PointImage extends NestedOption<{
    height?: {
        rangeMaxPoint?: any;
        rangeMinPoint?: any;
    };
    url?: {
        rangeMaxPoint?: any;
        rangeMinPoint?: any;
    };
    width?: {
        rangeMaxPoint?: any;
        rangeMinPoint?: any;
    };
}> {
    static OptionName: string;
    static ExpectedChildren: {
        height: {
            optionName: string;
            isCollectionItem: boolean;
        };
        url: {
            optionName: string;
            isCollectionItem: boolean;
        };
        width: {
            optionName: string;
            isCollectionItem: boolean;
        };
    };
}
declare class PointSelectionStyle extends NestedOption<{
    border?: {
        color?: any;
        visible?: any;
        width?: any;
    };
    color?: any;
    size?: any;
}> {
    static OptionName: string;
    static ExpectedChildren: {
        border: {
            optionName: string;
            isCollectionItem: boolean;
        };
        pointBorder: {
            optionName: string;
            isCollectionItem: boolean;
        };
    };
}
declare class Reduction extends NestedOption<{
    color?: any;
    level?: any;
}> {
    static OptionName: string;
}
declare class Scale extends NestedOption<{
    aggregateByCategory?: any;
    aggregationGroupWidth?: any;
    aggregationInterval?: {
        days?: any;
        hours?: any;
        milliseconds?: any;
        minutes?: any;
        months?: any;
        quarters?: any;
        seconds?: any;
        weeks?: any;
        years?: any;
    };
    allowDecimals?: any;
    breaks?: {
        endValue?: any;
        startValue?: any;
    };
    breakStyle?: {
        color?: any;
        line?: any;
        width?: any;
    };
    categories?: any;
    endOnTick?: any;
    endValue?: any;
    holidays?: any;
    label?: {
        customizeText?: any;
        font?: any;
        format?: any;
        overlappingBehavior?: any;
        topIndent?: any;
        visible?: any;
    };
    linearThreshold?: any;
    logarithmBase?: any;
    marker?: {
        label?: {
            customizeText?: any;
            format?: any;
        };
        separatorHeight?: any;
        textLeftIndent?: any;
        textTopIndent?: any;
        topIndent?: any;
        visible?: any;
    };
    maxRange?: {
        days?: any;
        hours?: any;
        milliseconds?: any;
        minutes?: any;
        months?: any;
        quarters?: any;
        seconds?: any;
        weeks?: any;
        years?: any;
    };
    minorTick?: {
        color?: any;
        opacity?: any;
        visible?: any;
        width?: any;
    };
    minorTickCount?: any;
    minorTickInterval?: {
        days?: any;
        hours?: any;
        milliseconds?: any;
        minutes?: any;
        months?: any;
        quarters?: any;
        seconds?: any;
        weeks?: any;
        years?: any;
    };
    minRange?: {
        days?: any;
        hours?: any;
        milliseconds?: any;
        minutes?: any;
        months?: any;
        quarters?: any;
        seconds?: any;
        weeks?: any;
        years?: any;
    };
    placeholderHeight?: any;
    showCustomBoundaryTicks?: any;
    singleWorkdays?: any;
    startValue?: any;
    tick?: {
        color?: any;
        opacity?: any;
        width?: any;
    };
    tickInterval?: {
        days?: any;
        hours?: any;
        milliseconds?: any;
        minutes?: any;
        months?: any;
        quarters?: any;
        seconds?: any;
        weeks?: any;
        years?: any;
    };
    type?: any;
    valueType?: any;
    workdaysOnly?: any;
    workWeek?: any;
}> {
    static OptionName: string;
    static ExpectedChildren: {
        aggregationInterval: {
            optionName: string;
            isCollectionItem: boolean;
        };
        break: {
            optionName: string;
            isCollectionItem: boolean;
        };
        breakStyle: {
            optionName: string;
            isCollectionItem: boolean;
        };
        label: {
            optionName: string;
            isCollectionItem: boolean;
        };
        marker: {
            optionName: string;
            isCollectionItem: boolean;
        };
        maxRange: {
            optionName: string;
            isCollectionItem: boolean;
        };
        minorTick: {
            optionName: string;
            isCollectionItem: boolean;
        };
        minorTickInterval: {
            optionName: string;
            isCollectionItem: boolean;
        };
        minRange: {
            optionName: string;
            isCollectionItem: boolean;
        };
        scaleLabel: {
            optionName: string;
            isCollectionItem: boolean;
        };
        tick: {
            optionName: string;
            isCollectionItem: boolean;
        };
        tickInterval: {
            optionName: string;
            isCollectionItem: boolean;
        };
    };
}
declare class ScaleLabel extends NestedOption<{
    customizeText?: any;
    font?: any;
    format?: any;
    overlappingBehavior?: any;
    topIndent?: any;
    visible?: any;
}> {
    static OptionName: string;
    static ExpectedChildren: {
        font: {
            optionName: string;
            isCollectionItem: boolean;
        };
        format: {
            optionName: string;
            isCollectionItem: boolean;
        };
    };
}
declare class SelectionStyle extends NestedOption<{
    border?: {
        color?: any;
        visible?: any;
        width?: any;
    };
    color?: any;
    size?: any;
    dashStyle?: any;
    hatching?: {
        direction?: any;
        opacity?: any;
        step?: any;
        width?: any;
    };
    width?: any;
}> {
    static OptionName: string;
}
declare class Series extends NestedOption<{
    aggregation?: {
        calculate?: any;
        enabled?: any;
        method?: any;
    };
    argumentField?: any;
    axis?: any;
    barOverlapGroup?: any;
    barPadding?: any;
    barWidth?: any;
    border?: {
        color?: any;
        dashStyle?: any;
        visible?: any;
        width?: any;
    };
    closeValueField?: any;
    color?: any;
    cornerRadius?: any;
    dashStyle?: any;
    highValueField?: any;
    hoverMode?: any;
    hoverStyle?: {
        border?: {
            color?: any;
            dashStyle?: any;
            visible?: any;
            width?: any;
        };
        color?: any;
        dashStyle?: any;
        hatching?: {
            direction?: any;
            opacity?: any;
            step?: any;
            width?: any;
        };
        width?: any;
    };
    ignoreEmptyPoints?: any;
    innerColor?: any;
    label?: {
        alignment?: any;
        argumentFormat?: any;
        backgroundColor?: any;
        border?: {
            color?: any;
            dashStyle?: any;
            visible?: any;
            width?: any;
        };
        connector?: {
            color?: any;
            visible?: any;
            width?: any;
        };
        customizeText?: any;
        font?: any;
        format?: any;
        horizontalOffset?: any;
        position?: any;
        rotationAngle?: any;
        showForZeroValues?: any;
        verticalOffset?: any;
        visible?: any;
    };
    lowValueField?: any;
    maxLabelCount?: any;
    minBarSize?: any;
    name?: any;
    opacity?: any;
    openValueField?: any;
    pane?: any;
    point?: {
        border?: {
            color?: any;
            visible?: any;
            width?: any;
        };
        color?: any;
        hoverMode?: any;
        hoverStyle?: {
            border?: {
                color?: any;
                visible?: any;
                width?: any;
            };
            color?: any;
            size?: any;
        };
        image?: {
            height?: {
                rangeMaxPoint?: any;
                rangeMinPoint?: any;
            };
            url?: {
                rangeMaxPoint?: any;
                rangeMinPoint?: any;
            };
            width?: {
                rangeMaxPoint?: any;
                rangeMinPoint?: any;
            };
        };
        selectionMode?: any;
        selectionStyle?: {
            border?: {
                color?: any;
                visible?: any;
                width?: any;
            };
            color?: any;
            size?: any;
        };
        size?: any;
        symbol?: any;
        visible?: any;
    };
    rangeValue1Field?: any;
    rangeValue2Field?: any;
    reduction?: {
        color?: any;
        level?: any;
    };
    selectionMode?: any;
    selectionStyle?: {
        border?: {
            color?: any;
            dashStyle?: any;
            visible?: any;
            width?: any;
        };
        color?: any;
        dashStyle?: any;
        hatching?: {
            direction?: any;
            opacity?: any;
            step?: any;
            width?: any;
        };
        width?: any;
    };
    showInLegend?: any;
    sizeField?: any;
    stack?: any;
    tag?: any;
    tagField?: any;
    type?: any;
    valueErrorBar?: {
        color?: any;
        displayMode?: any;
        edgeLength?: any;
        highValueField?: any;
        lineWidth?: any;
        lowValueField?: any;
        opacity?: any;
        type?: any;
        value?: any;
    };
    valueField?: any;
    visible?: any;
    width?: any;
}> {
    static OptionName: string;
    static IsCollectionItem: boolean;
}
declare class SeriesBorder extends NestedOption<{
    color?: any;
    dashStyle?: any;
    visible?: any;
    width?: any;
}> {
    static OptionName: string;
}
declare class SeriesTemplate extends NestedOption<{
    customizeSeries?: any;
    nameField?: any;
}> {
    static OptionName: string;
}
declare class Shutter extends NestedOption<{
    color?: any;
    opacity?: any;
}> {
    static OptionName: string;
}
declare class Size extends NestedOption<{
    height?: any;
    width?: any;
}> {
    static OptionName: string;
}
declare class SliderHandle extends NestedOption<{
    color?: any;
    opacity?: any;
    width?: any;
}> {
    static OptionName: string;
}
declare class SliderMarker extends NestedOption<{
    color?: any;
    customizeText?: any;
    font?: any;
    format?: any;
    invalidRangeColor?: any;
    paddingLeftRight?: any;
    paddingTopBottom?: any;
    placeholderHeight?: any;
    visible?: any;
}> {
    static OptionName: string;
    static ExpectedChildren: {
        font: {
            optionName: string;
            isCollectionItem: boolean;
        };
        format: {
            optionName: string;
            isCollectionItem: boolean;
        };
    };
}
declare class Subtitle extends NestedOption<{
    font?: any;
    offset?: any;
    text?: any;
    textOverflow?: any;
    wordWrap?: any;
}> {
    static OptionName: string;
    static ExpectedChildren: {
        font: {
            optionName: string;
            isCollectionItem: boolean;
        };
    };
}
declare class Tick extends NestedOption<{
    color?: any;
    opacity?: any;
    width?: any;
}> {
    static OptionName: string;
}
declare class TickInterval extends NestedOption<{
    days?: any;
    hours?: any;
    milliseconds?: any;
    minutes?: any;
    months?: any;
    quarters?: any;
    seconds?: any;
    weeks?: any;
    years?: any;
}> {
    static OptionName: string;
}
declare class Title extends NestedOption<{
    font?: any;
    horizontalAlignment?: any;
    margin?: {
        bottom?: any;
        left?: any;
        right?: any;
        top?: any;
    };
    placeholderSize?: any;
    subtitle?: {
        font?: any;
        offset?: any;
        text?: any;
        textOverflow?: any;
        wordWrap?: any;
    };
    text?: any;
    textOverflow?: any;
    verticalAlignment?: any;
    wordWrap?: any;
}> {
    static OptionName: string;
    static ExpectedChildren: {
        font: {
            optionName: string;
            isCollectionItem: boolean;
        };
        margin: {
            optionName: string;
            isCollectionItem: boolean;
        };
        subtitle: {
            optionName: string;
            isCollectionItem: boolean;
        };
    };
}
declare class Url extends NestedOption<{
    rangeMaxPoint?: any;
    rangeMinPoint?: any;
}> {
    static OptionName: string;
}
declare class Value extends NestedOption<{
    endValue?: any;
    length?: {
        days?: any;
        hours?: any;
        milliseconds?: any;
        minutes?: any;
        months?: any;
        quarters?: any;
        seconds?: any;
        weeks?: any;
        years?: any;
    };
    startValue?: any;
    defaultEndValue?: any;
    defaultStartValue?: any;
}> {
    static OptionName: string;
    static DefaultsProps: {
        defaultEndValue: string;
        defaultStartValue: string;
    };
    static ExpectedChildren: {
        length: {
            optionName: string;
            isCollectionItem: boolean;
        };
    };
}
declare class ValueAxis extends NestedOption<{
    inverted?: any;
    logarithmBase?: any;
    max?: any;
    min?: any;
    type?: any;
    valueType?: any;
}> {
    static OptionName: string;
}
declare class ValueErrorBar extends NestedOption<{
    color?: any;
    displayMode?: any;
    edgeLength?: any;
    highValueField?: any;
    lineWidth?: any;
    lowValueField?: any;
    opacity?: any;
    type?: any;
    value?: any;
}> {
    static OptionName: string;
}
declare class Width extends NestedOption<{
    rangeMaxPoint?: any;
    rangeMinPoint?: any;
}> {
    static OptionName: string;
}
export default RangeSelector;
export { RangeSelector, IRangeSelectorOptions, Aggregation, AggregationInterval, ArgumentFormat, Background, BackgroundImage, Behavior, Border, Break, BreakStyle, Chart, CommonSeriesSettings, CommonSeriesSettingsHoverStyle, CommonSeriesSettingsLabel, CommonSeriesSettingsSelectionStyle, Connector, DataPrepareSettings, Export, Font, Format, Hatching, Height, HoverStyle, Image, Indent, Label, Length, LoadingIndicator, Margin, Marker, MarkerLabel, MaxRange, MinorTick, MinorTickInterval, MinRange, Point, PointBorder, PointHoverStyle, PointImage, PointSelectionStyle, Reduction, Scale, ScaleLabel, SelectionStyle, Series, SeriesBorder, SeriesTemplate, Shutter, Size, SliderHandle, SliderMarker, Subtitle, Tick, TickInterval, Title, Url, Value, ValueAxis, ValueErrorBar, Width };

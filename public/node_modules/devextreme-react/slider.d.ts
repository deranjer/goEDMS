/*!
 * devextreme-react
 * Version: 19.2.5
 * Build date: Mon Dec 16 2019
 *
 * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-react
 */

import dxSlider, { IOptions } from "devextreme/ui/slider";
import { Component as BaseComponent, IHtmlOptions } from "./core/component";
import NestedOption from "./core/nested-option";
interface ISliderOptions extends IOptions, IHtmlOptions {
    defaultValue?: any;
}
declare class Slider extends BaseComponent<ISliderOptions> {
    get instance(): dxSlider;
    protected _WidgetClass: typeof dxSlider;
    protected _defaults: {
        defaultValue: string;
    };
    protected _expectedChildren: {
        label: {
            optionName: string;
            isCollectionItem: boolean;
        };
        tooltip: {
            optionName: string;
            isCollectionItem: boolean;
        };
    };
}
declare class Format extends NestedOption<{
    currency?: any;
    formatter?: any;
    parser?: any;
    precision?: any;
    type?: any;
}> {
    static OptionName: string;
}
declare class Label extends NestedOption<{
    format?: any;
    position?: any;
    visible?: any;
}> {
    static OptionName: string;
    static ExpectedChildren: {
        format: {
            optionName: string;
            isCollectionItem: boolean;
        };
    };
}
declare class Tooltip extends NestedOption<{
    enabled?: any;
    format?: any;
    position?: any;
    showMode?: any;
}> {
    static OptionName: string;
    static ExpectedChildren: {
        format: {
            optionName: string;
            isCollectionItem: boolean;
        };
    };
}
export default Slider;
export { Slider, ISliderOptions, Format, Label, Tooltip };
